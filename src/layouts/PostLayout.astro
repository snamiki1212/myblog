---
import { default as Markdown } from "../components/Markdown.astro";
import { default as PaperWithTitle } from "../components/PaperWithTitle.astro";
import { default as Frontmatter } from "../components/Frontmatter.astro";
import { default as AvatarCard } from "../components/AvatarCard.astro";
import { default as Search } from "../components/Search.astro";
import { default as Toc } from "../components/Toc.astro";
import { SITE_NAME_WITH_EMOJI } from "../constants/site";
import { toCategoryIndexUrl, toTagIndexUrl, toHomeUrl } from "../utils/url";
import { renderMeta } from "../utils/meta";
import type { MarkdownLayoutProps } from "astro";
import { type BlogEntry } from "../utils/astro";

type Frontmatter = BlogEntry["data"];
type Props = MarkdownLayoutProps<Frontmatter>;
const { frontmatter, headings } = Astro.props;
const slug: string = (frontmatter as any).slug; // NOTE: Astro does not resolve slug type config automatically :/
if (!slug) throw new Error("slug is not defined.");
---

<div class="my-16 gap-4 flex direction-row flex-wrap justify-center">
  <main class="lg:w-auto w-full">
    <PaperWithTitle slug={slug}>
      <span slot="title">
        <div class="text-sm breadcrumbs">
          <ul>
            <li>
              <a class="underline underline-offset-4" href={toHomeUrl()}
                >{SITE_NAME_WITH_EMOJI}</a
              >
            </li>
            <li>
              <a
                class="underline underline-offset-4"
                href={toCategoryIndexUrl(frontmatter.category)}
                >ðŸ“‚ {frontmatter.category}</a
              >
            </li>
            <li>ðŸ“‘ {frontmatter.title}</li>
          </ul>
        </div>
      </span>
      <div slot="body">
        <div class="pt-4"></div>
        <div class="flex flex-wrap gap-1">
          {
            frontmatter.tags.map((tag) => (
              <a
                href={toTagIndexUrl(tag)}
                class="btn btn-outline btn-xs normal-case text-base-content text-opacity-60"
              >
                {renderMeta({ title: tag })}
              </a>
            ))
          }
        </div>
        <Markdown>
          <slot />
        </Markdown>
      </div>
    </PaperWithTitle>
  </main>
  <aside class="hidden lg:inline-flex flex-col max-w-xs gap-4">
    <Frontmatter frontmatter={frontmatter} />
    <div
      class="sticky top-4 right-0 h-fit flex flex-col gap-4 max-h-[calc(100vh-50px)]"
    >
      <AvatarCard />
      <div class="glass rounded-xl overflow-y-auto p-8">
        <Search />
      </div>
      <div class="overflow-y-auto">
        <Toc headings={headings} />
      </div>
    </div>
  </aside>
</div>
