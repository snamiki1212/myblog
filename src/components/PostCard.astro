---
import type { CollectionEntry } from "astro:content";
import { renderMeta } from "../utils/meta";
import { renderOnlyOneDate } from "../utils/date";
import { default as EditIcon } from "./EditIcon.astro";
import { default as IconUpdate } from "./IconUpdate.astro";
import { toPostUrl } from "../utils/url";
import { buildTransactionName } from "../utils/transition";

type BlogEntry = CollectionEntry<"blog">;
interface Props {
  entry: BlogEntry;
}

const { entry } = Astro.props;
const category = entry.data.category;
const tags = entry.data.tags;
const { type, title: dateStr } = renderOnlyOneDate(entry);
---

<a
  href={toPostUrl(entry.slug)}
  class="hover:-translate-y-1 transition-all duration-200"
>
  <div
    class="card card-compact max-w-xs h-48 glass shadow-xl"
    transition:name={buildTransactionName.postCard(entry.slug)}
  >
    <div class="card-body">
      <div class="flex flex-row">
        <h2 class="card-title ml-4 mt-6">{entry.data.title}</h2>
        <span class="absolute -top-3 left-0">
          <span
            class="p-6 mask mask-hexagon badge badge-primary w-full text-xs"
          >
            {category}
          </span>
        </span>
      </div>

      <div class="card-actions h-full flex items-end">
        <span class="inline-flex flex-row justify-end items-center">
          <span>
            {type === "createdAt" ? <EditIcon /> : <IconUpdate />}
          </span>
          <span>
            {dateStr}
          </span>
        </span>
        {
          tags.map((tag) => (
            <div class="badge badge-lg badge-outline normal-case">
              {renderMeta({ title: tag })}
            </div>
          ))
        }
      </div>
    </div>
  </div>
</a>
