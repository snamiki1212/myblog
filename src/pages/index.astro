---
import * as R from "remeda";
import Layout from "../layouts/BaseLayout.astro";
import { default as PickedPostList } from "../components/PickedPostList.astro";
import { default as Container } from "../components/Container.astro";
import { default as Hero } from "../components/Hero.astro";
import { toTagIndexUrl } from "../utils/url";
import { toTagInfoList, renderMeta, sortByCreatedAt } from "../utils/meta";
import { toPickedEntryInfoList } from "../utils/entry";
import { LATEST_PAGE_SIZE, IGNORE_CATEGORY_LIST } from "../constants/site";
import { getCollection } from "astro:content";

const allEntries = sortByCreatedAt(await getCollection("blog"));

const pickedEntryInfoList = R.pipe(
  allEntries,
  R.filter((entry) => !IGNORE_CATEGORY_LIST.includes(entry.data.category)),
  (arr) => toPickedEntryInfoList(arr, { pageSize: LATEST_PAGE_SIZE })
);

const tagInfoList = toTagInfoList(allEntries);
---

<Layout showHeader={false}>
  <main class="grid gap-10 w-full m-auto">
    <Hero />
    {
      pickedEntryInfoList.map(({ title, entires, total, nextUrl }) => (
        <Container>
          <PickedPostList
            title={title}
            next={{ total, nextUrl }}
            entries={entires}
          />
        </Container>
      ))
    }

    <div class="bg-base-200 py-8">
      <Container>
        <div class="py-8">
          <h2 class="text-2xl font-bold">Tag</h2>
          <div class="flex flex-wrap gap-2 mt-4">
            {
              tagInfoList.map((info) => (
                <a
                  class="btn btn-outline btn-sm normal-case"
                  href={toTagIndexUrl(info.title)}
                >
                  {renderMeta(info)}
                </a>
              ))
            }
          </div>
        </div>
      </Container>
    </div>
  </main>
</Layout>
